plugins {
//    id 'org.springframework.boot' version '2.2.6.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
}

allprojects {

    apply plugin: 'groovy'
    apply plugin: 'idea'
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'war'

    group = 'com.cai'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '1.8'

    ext {
        SPRING_BOOT_VERSION = '2.2.6.RELEASE'
    }
    dependencies {
        compile fileTree(dir: 'libs')
        compile "org.springframework.boot:spring-boot-starter:$SPRING_BOOT_VERSION"
        compile("org.springframework.boot:spring-boot-starter-tomcat:$SPRING_BOOT_VERSION")
        testCompile("org.springframework.boot:spring-boot-starter-test:$SPRING_BOOT_VERSION") {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
        compile 'org.codehaus.groovy:groovy-all:2.3.3'

        compile group: 'org.quartz-scheduler', name: 'quartz', version: '2.3.0'
        compile("org.springframework.boot:spring-boot-starter-web:$SPRING_BOOT_VERSION")
        testCompile("org.springframework.boot:spring-boot-starter-test:$SPRING_BOOT_VERSION")
        testCompile 'junit:junit'

        compile group: 'org.gradle', name: 'gradle-core', version: '3.5'
        compile group: 'com.cai', name: 'base-mongo', version: '1.0.0-releases', changing: true
        compile group: 'com.cai', name: 'base-general', version: '0.0.2.3-snapshot', changing: true
    }

    repositories {
        maven { url "http://maven.aliyun.com/nexus/content/groups/public" }
        maven { url "http://47.102.222.185:30021/repository/maven-public" }
        maven { url "http://repo.spring.io/libs-release" }
//        mavenLocal()
    }

    def localRepositoryPath = 'file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath

    uploadArchives {
        repositories {
            mavenDeployer   {
                repository(url: localRepositoryPath)
                pom.project {
                    name = project.name        // 当前项目名称
                    version = project.version   //当前项目版本  0.0.1
                    groupId = project.group     //  当前项目组  com.xxx
                }
            }
        }
    }

    [compileJava,compileTestJava,javadoc]*.options*.encoding = 'UTF-8'

    jar.enabled=true

    war {
        baseName = project.name
    }

    task listJars(description: 'Display all compile jars.') {
        doLast {
            configurations.compile.each { File file -> println file.name }
        }
    }
}


dependencies {
    compile project(':job-service')
    compile project(':job-controller')
}

test {
    useJUnitPlatform()
}

